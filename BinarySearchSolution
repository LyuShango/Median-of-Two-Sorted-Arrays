class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;
        if(n1 > n2){
            return findMedianSortedArrays(nums2, nums1);
        }
        
        int lo = 0; 
        int hi = n1;
        while(lo <= hi){
            int cut1 = (lo + hi)/2;
            int cut2 = (n1 + n2)/2 - cut1;
            
            double l1 = cut1 == 0 ? -Double.MIN_VALUE : nums1[cut1-1];
            double l2 = cut2 == 0 ? -Double.MIN_VALUE : nums2[cut2-1];
            double r1 = cut1 == n1 ? Double.MAX_VALUE : nums1[cut1];
            double r2 = cut2 == n2 ? Double.MAX_VALUE : nums2[cut2];
            
            if (l1 > r2) hi = cut1 - 1;
            else if(l2 > r1) lo = cut1 + 1;
            else return (n1 + n2) % 2 == 1 ? Math.min(r1, r2) : (Math.max(l1, l2) + Math.min(r1, r2)) / 2.;
        }
        return -1.;
    }
}
